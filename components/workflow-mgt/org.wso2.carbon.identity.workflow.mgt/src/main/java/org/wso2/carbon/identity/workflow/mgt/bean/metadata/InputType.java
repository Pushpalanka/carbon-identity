//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.09.17 at 08:05:47 PM IST 
//


package org.wso2.carbon.identity.workflow.mgt.bean.metadata;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InputType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InputType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Select"/>
 *     &lt;enumeration value="Multiple_Select"/>
 *     &lt;enumeration value="Option"/>
 *     &lt;enumeration value="Single_CheckBox"/>
 *     &lt;enumeration value="Multiple_CheckBox"/>
 *     &lt;enumeration value="TextArea"/>
 *     &lt;enumeration value="Password"/>
 *     &lt;enumeration value="Text"/>
 *     &lt;enumeration value="Multiple_Steps_User_Role"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "InputType")
@XmlEnum
public enum InputType {

    @XmlEnumValue("Select")
    SELECT("Select"),
    @XmlEnumValue("Multiple_Select")
    MULTIPLE_SELECT("Multiple_Select"),
    @XmlEnumValue("Option")
    OPTION("Option"),
    @XmlEnumValue("Single_CheckBox")
    SINGLE_CHECK_BOX("Single_CheckBox"),
    @XmlEnumValue("Multiple_CheckBox")
    MULTIPLE_CHECK_BOX("Multiple_CheckBox"),
    @XmlEnumValue("TextArea")
    TEXT_AREA("TextArea"),
    @XmlEnumValue("Password")
    PASSWORD("Password"),
    @XmlEnumValue("Text")
    TEXT("Text"),
    @XmlEnumValue("Multiple_Steps_User_Role")
    MULTIPLE_STEPS_USER_ROLE("Multiple_Steps_User_Role");
    private final String value;

    InputType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InputType fromValue(String v) {
        for (InputType c: InputType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
